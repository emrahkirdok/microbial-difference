---
title: "TPL Veri Analizi"
author: "Nursena Kocatürk"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```

# Giriş

Bu dökümanda tpl veri analizi adımları dökümante edilecektir.

# Yöntemler

## Kütüphaneler

Çalışmamızda aşağıda belirtilen kütüphaneler kullanılmaktadır. Örneklerin sahip oldukları Bray-Curtis uzaklıkları `vegan` kütüphanesi ile hesaplanmaktadır. Elde edilen Bray-Curtis uzaklık matrisi, daha sonra `ecodist` kütüphanesi içerisinde bulunan `pcoa` komutu ile öz bileşenlerine ayrılmaktadır.

```{r}
library(vegan)
library(ggplot2)
library(ecodist)
library(tidyverse)
library(phyloseq)
library(DESeq2)
```

## Veri yükleme

Çalışmalarda kullanılacak mutlak çokluk verisi aşağıdaki gibi yüklenmektedir:

```{r}

otu_data <- read.table(file = "data/krakenuniq_abundance_matrix.txt", header = T, sep = "\t")
```

Çalışma kapsamında toplam olarak `r ncol(otu_data)`kadar örnek ve`r nrow(otu_data)` kadar mikroorganizma bulunmaktadır:

```{r}
dim(otu_data)
```

Şimdi de, örneklerin sahip oldukları doku bilgilerini yükleyelim:

```{r}
sample_data <- read.table(file = "data/metadata.csv", header = T, sep = ";")
rownames(sample_data) <- sample_data$Sample
```

Uyarı: Bu noktada veri sütunlar ile metadata içerisindeki örnek bilgisinin aynı sırada olması önemlidir.

Her dokuya ait kaç tane örnek var acaba?

```{r}
table(sample_data$Tissue)
```

Düşük çokluğa sahip olan örnekleri belirleyelim.

```{r}
keep <- rowMeans(otu_data) >= 10
deleted <- rowMeans(otu_data) < 10

otu_data <- otu_data[keep,]
```

Elimizde `r sum(deleted)` tane, düşük çokluğa sahip takson bulunmaktadır.

Dentin ve cementum, tür sayılarını gösteren verileri yükleyelim:

```{r}
species <- data.frame(matrix(data = NA, nrow = ncol(otu_data), ncol = 3))
colnames(species) <- c("Sample", "Number of Species", "Tissue")

for (i in 1: ncol(otu_data)){
  species[i,1] <- colnames(otu_data)[i]
  species[i,2] <- sum(otu_data[,i] > 0)
  species[i,3] <- sample_data$Tissue[sample_data$Sample==colnames(otu_data)[i]]
  }

#species <- read.table(file = "data/species.csv", header = T, sep = ";")
```

Dentin ve cementum farkını gösteren bir grafik oluşturalım.

```{r}
ggplot(data = species, aes(x = Tissue, y = `Number of Species`)) + geom_boxplot() + geom_point()
```

## Veri normalizasyonu

```{r}
dds <- DESeqDataSetFromMatrix(countData = otu_data, colData = sample_data, design = ~Tissue)
dds <- DESeq(dds)
otu_data_normalized <- counts(dds, normalized = TRUE)
```

Elimizdeki mikrobiyal çokluk matrisini öncelikle normalize etmemiz gereklidir. Burada Deseq paketinin shaip olduğu normalizsayon yeteneklerini kullanıyoruz.

```{r eval = F, include = F}
otu_data <- scale(otu_data,center = F, scale = colSums(otu_data))
```

## Veri kalitesi kontrolü

### Kümeleme

```{r}
g <- otu_data_normalized
colnames(g) <- sample_data$Tissue
plot(hclust(dist(x = t(g), method = "euclidean")))

```

### Birincil öz bileşen tahlili (PCA)

PCA, büyük boyutlu olan verileri küçük boyuta indirgemek için kullanılan yaklaşımlardan biridir. Bütün eksenler aynı anda görselleştirilemez. PCA, çok boyutlu veriyi alarak üç boyuta indirgemektedir. İlk üç eksen veri setinin sahip olduğu varyasyonun büyük bir kısmını içermektedir.

Verilen matris üzerinde PCA gerçekleştirir ve sonuçlar `prcomp` sınıfının nesnesi olarak döndürür.

Burada önemli olan nokta, veriyi transpoze etmemiz. Yani satırları sütün, sütunları ise satır yapıyoruz.

```{r}
pca_res <- prcomp(t(otu_data_normalized))
```

Prcomp sonuç nesnesinin özeti:

```{r}
summary(pca_res)
```

Sonuç nesnesindeki değişkenlerin adı:

-   sdev; temel bileşenlerin standart sapmaları
-   rotation; değişken yüklemelerin matrisi (yani sütunları özvektörleri içeren bir matris) x
-   retx doğruysa, döndürülen verilerin değeri veriler, döndürme matrisiyle döndürülür.
-   center, scale; kullanılan ortalama ve ölçeklendirme veya YANLIŞ.

```{r}
names(pca_res)
```

### Kümülatif varyasyon grafiği

Bu grafikte bütün mikropların sahip olduğu varyasyon 3 eksene indirgenmektedir. Elde edilen ilk 3 eksen bütün veri setine sahip olan varyasyonun büyük kısmını içermektedir. Ve eksenlerdeki varyasyon oranları, eklemeli olarak ilerlemektedir. Bu kümülatif varyasyondur.

Bu varyasyon değerini hesaplamak için şu adımları uygulayabiliriz:

**Standart sapma** `princomp` bileşeni; sdev

```{r}
pca_res$sdev
```

Varyans standart sapmanın karesidir.

```{r}
pca_res$sdev^2
```

Varyans oranı, varyansın tüm varyansların toplamına bölünmesiyle elde edilir.

```{r}
pca_res$sdev^2 / sum(pca_res$sdev^2)
```

Kümülatif oran, varyans oranının kümülatif toplamıdır.

```{r}
cumsum(pca_res$sdev^2 / sum(pca_res$sdev^2))
```

Kümülatif varyans grafiği;

```{r}
plot(cumsum(pca_res$sdev^2 / sum(pca_res$sdev^2)), type="b", xlab="PC", ylab="Cumulative Proportion")
```

### PCA analizini görselleştirme

Bu adımda ise PCA analizini görselleştirelim. Bizim için önemli olan ilk üç eksen. Dolayısıyla, öncelikle ilk üç eksendeki değerleri `pca_res` içerisinden alalım. Ayrıca, örneklerin doku bilgilerini de elde edelim. Bu sayede, grafikleki noktaları, örneklerin doku bilgilerine göre boyayabiliriz.

```{r}
PC_data <- data.frame(PC1=pca_res$x[,1],
                      PC2=pca_res$x[,2],
                      PC3=pca_res$x[,3],
                      Tissue=sample_data$Tissue)
```

Şimdi de `ggplot2` ile görselleştirme yapalım. Önce PC1 ve PC2:

```{r}
ggplot(data = PC_data, aes(x=PC1, y=PC2, color=Tissue)) + geom_point()
```

Şimdi de PC1 ve PC3:

```{r}
ggplot(data = PC_data, aes(x=PC1, y=PC3, color=Tissue)) + geom_point()
```

Son olarak PC2 ve PC3:

```{r}
ggplot(data = PC_data, aes(x=PC2, y=PC3, color=Tissue)) + geom_point()
```

### Bray Curtis Analizi

Bray curtis analizi, iki farklı bölge arasındaki tür popülasyonlarındaki farklılıkları ölçmek için kullanılır.

Aynı veya farklı dokudan gelen örnekler; aynı dokuysa benzer türlere, farklı dokuysa farklı türlere sahiptir. İki örnek fazla ortak türe sahipse bunlar benzerdir. Ve iki farklı örnek ne kadar fazla ortak tür taşıyorsa o kadar düşük bray curtis uzaklığına sahiptir.

Bray curtis uzaklğı 0 ile 1 arasındadır.

-   0 ise iki örnek aynı türü taşıyordur.
-   1, örnekler hiçbir tür paylaşmamaktadır.

Bu adımda, örneklerin sahip oldukları mikrobiyal uzaklıkları hesaplayarak, elde edilen uzaklık matrisini görselleştirelim.

Önce Bray-Curtis ekolojik uzaklığını elde edelim:

```{r}
bray_curtis_dist <- vegdist(t(otu_data_normalized), method = "bray")
```

Sonra, `pco` ile bu uzaklık matrisinin öz bileşenlerine ayıralım:

```{r}
bray_curtis_pcoa <- pco(bray_curtis_dist)
```

Aynı şekilde, bizim için önemli olan eksenleri ve doku bilgisini alalım.

```{r}
bray_curtis_pcoa_df <- data.frame(PCOA1 = bray_curtis_pcoa$vectors[,1], 
                                  PCOA2 = bray_curtis_pcoa$vectors[,2],
                                  PCOA3 = bray_curtis_pcoa$vectors[,3],
                                  Tissue = sample_data$Tissue)
```

Önce PC1 ve PC2 eksenlerini inceleyelim:

```{r}
ggplot(data = bray_curtis_pcoa_df, aes(x=PCOA1, y=PCOA2, color=Tissue)) +
  geom_point() +
  labs(title = "Bray-Curtis PCoA")
```

Sonra PC1 ve PC3 eksenlerini inceleyelim:

```{r}
ggplot(data = bray_curtis_pcoa_df, aes(x=PCOA1, y=PCOA3, color=Tissue)) +
  geom_point() +
  labs(title = "Bray-Curtis PCoA")
```

Önce PC2 ve PC3 eksenlerini inceleyelim:

```{r}
ggplot(data = bray_curtis_pcoa_df, aes(x=PCOA2, y=PCOA3, color=Tissue)) +
  geom_point() +
  labs(title = "Bray-Curtis PCoA")
```

```{r}
g <- otu_data_normalized
colnames(g) <- sample_data$Tissue
bray_curtis_dist <- vegdist(t(g), method = "bray")
plot(hclust(bray_curtis_dist))
```

## Alfa Çeşitliliği

Alfa çeşitliliği, tek bir örnekteki tür çeşitliliğini ölçer. İncelenen farklı tür sayısına göre, tek bir örneğin çeşitliliğini ölçer.

### Alfa Çeşitliliği istatistikleri

#### Shannon indeksi

-   Bir topluluktaki türlerin çeşitliliğini ölçmek için kullanılır.

-   Shannon indeksi, belirli bir topluluktaki türlerin ne kadar öeşitli olduğunu gösterir. Türlerin sayısı ve bolukların eşitliği arttıkça artar.

-   Shannon değeri ne kadar yüksekse, topluluktaki tür çeşitliliği de o kadar yüksektir. Ne kadar düşük olursa da o kadar düşüktür. Bu değer '0' olduğunda, bir türün bulunduğu bir topluluğu belirtmektedir.

-   Eğer bir alandaki türler eşit olarak dağılmışsa shannon indeksi daha yüksek olur. Ancak birkaç tür daha baskın ise indeks daha düşük olur.

#### Simpson indeksi

-   Rastgele seçilen iki bireyin aynı tür olma olasılığı

-   Örnekten rastgele alınan iki varlığın (mikroplar veya okumalar) farklı türde olma olasılığına dayanır.

-   Olasılık olduğu için 0 ile 1 arasında değişmektedir.

#### Ters simpson indeksi

-   İlgilenilen veri kümesindeki türlerin ortalama orantılı bolluğunu ölçmek için ağırlıklı aritmetik ortalama kullanıldığında elde edilen etkin tür sayısına eşittir.

-   Ters simpson indeksi, sıfırdan büyüktür. Ayrıca ters simpson indeksi, daha yüksek çeşitlilik değerlerini daha fazla yayma eğilimindedir.

Vegan, biyolojik çeşitlilik istatistiklerini hesaplamak için kullanılan bir araç setidir.

```{r}
library("vegan")
```

`otu_data` verisindeki alfa çeşitliliğini hesaplayalım. Bu çeşitliliğin indeksleri olan shannon, simpson ve invsimpson değerlerini bulalım:

```{r}
shannon <- diversity(x = t(otu_data_normalized), index = 'shannon')

simpson <- diversity(x = t(otu_data_normalized),index = 'simpson')

invsimpson <- diversity(x = t(otu_data_normalized),index = 'invsimpson')

alpha <- data.frame(Sample = colnames(otu_data), 
                    Shannon = shannon,
                    Simpson = simpson,
                    Invsimpson = invsimpson,
                    Tissue = sample_data$Tissue)
```

Dentin, cementum, kafatası ve uzun kemik dokuların, shannon değerlerini gösteren grafiği oluşturalım:

```{r}
ggplot(data = alpha, aes(x = Tissue, y = Shannon)) + geom_boxplot() + geom_point()
```

Simpson değerlerini gösteren grafiği oluşturalım:

```{r}
ggplot(data = alpha, aes(x = Tissue, y = Simpson)) + geom_boxplot() + geom_point()
```

Invsimpson değerlerini gösteren garfiği oluşturalım:

```{r}
ggplot(data = alpha, aes(x = Tissue, y = Invsimpson)) + geom_boxplot() + geom_point()
```

Grafiklere bakıldığında dokulardaki ortalamalar arasındaki farklar gözlemlenmektedir.

Dentin ve cementum arasındaki alfa çeşitlilikliliklerde anlamlı bir fark var mı?

### Dentin ve Cementum alfa çeşitlikler arasında anlamı fark var mı?

t-testi, iki grubun ortalamaları arasında anlamlı bir fark olup olmadığını test etmek için kullanılabilir.

#### Shannon çeşitlilği için

Dentin ve cementum dokulaının, shannon değerleri anlamlı olarak birbirinden farklı mı?

```{r}
ggplot(data = alpha, aes(x = Shannon)) + geom_density(aes(fill = Tissue), alpha = 0.5)
```

Bunu göstermek için iki farklı dağılım olmalıdır:

Dentin ve cementum dokularındaki shannon değerlerini elde edelim:

Dentin ve cementum dokularındaki shannon değer ortalamaları çok fazla olmamakla birlikte, birbirinden farklı değerler taşımaktadır. Bu farkın anlamlı olup olmadığını tespit etmek için 't.test' kullanabiliriz:

```{r}
test.shannon <- t.test(x = alpha$Shannon[alpha$Tissue == "Dentin"], 
                                         y = alpha$Shannon[alpha$Tissue == "Cementum"])
test.shannon
```

T testi sonunda elde ettiğimiz p-değerini şu şekilde geri döndürebiliriz:

```{r}
test.shannon$p.value
```

P-value önemli bir değerdir. T testi sonunda elde ettiğimiz p-value sonucu düşük bir değerdir. Bu sonuç, bu iki dokunun ortalamalarının birbirinden farklı olduklarını göstermektedir.

0.001 alpha değeri altında elde edilen sonuç anlamlı mı?

```{r}
test.shannon$p.value < 0.001
```

Bu iki popülasyonun ortamalarının aynı olma ihtimalinin yüksek olduğunu görüyoruz. Bu nedenle sıfır hipotezini reddedmiyoruz.

#### Simpson Çeşitliliği için

Dentin ve cementum dokulaının, simpson değerleri anlamlı olarak birbirinden farklı mı?

```{r}
ggplot(data = alpha, aes(x = Simpson)) + geom_density(aes(fill = Tissue), alpha = 0.7)
```

Dentin ve cementum dokularındaki simpson değerleri:

```{r}
test.simpson <- t.test(x = alpha$Simpson[alpha$Tissue == "Dentin"], 
                       y = alpha$Simpson[alpha$Tissue == "Cementum"])
test.simpson
```

#### Test Invsimpson Çeşitliliği için

Dentin ve cementum dokularının, invsimpson değerleri anlamlı olarak birbirinden farklı mı?

```{r}
ggplot(data = alpha, aes(x = Invsimpson)) + geom_density(aes(fill = Tissue), alpha = 0.7)
```

Dentin ve cementum dokularındaki invsimpson değerleri:

```{r}
test.invsimpson <- t.test(x = alpha$Invsimpson[alpha$Tissue == "Dentin"], 
                          y = alpha$Invsimpson[alpha$Tissue == "Cementum"])
test.invsimpson
```

## Dentin ve Cementum arasında anlamlı değişen mikroplar

Sadece Dentin ve Cementum örneklerini alıp yeni bir Deseq verisi oluşturalım

```{r}
sample_data_subset <- sample_data[sample_data$Tissue %in% c("Dentin", "Cementum"),]
otu_data_subset <- otu_data[,rownames(sample_data[sample_data$Tissue %in% c("Dentin", "Cementum"),])]

dds <- DESeqDataSetFromMatrix(countData = otu_data_subset, colData = sample_data_subset, design = ~Tissue)
dds <- DESeq(dds)
```

Hangi mikroplar anlamlı değişmi?

```{r}
dds_results <- results(dds)
dds_results <- dds_results[!is.na(dds_results$padj),]
```

Normalize edilmiş p değeri 0.001'den küçük olanlar

```{r}
alpha <- 0.01
significant <- dds_results[dds_results$padj < alpha, ]
```

Elimizdeki sonucu bir veri çerçevesine aktaralım:

```{r}
result <- data.frame(Sample = rownames(significant),
  BaseMean=significant$baseMean, 
  FoldChange=significant$log2FoldChange, 
  Padj=significant$padj)

```

Volcano plot ile anlamlı değişen bakterileri inceleyelim:

```{r}
maxFold<-max(dds_results$log2FoldChange[!is.na(dds_results$log2FoldChange)])
minFold<-min(dds_results$log2FoldChange[!is.na(dds_results$log2FoldChange)])

par(mfrow=c(1,1))
with(dds_results, plot(log2FoldChange, -log10(pvalue), pch=20, main="Volcano plot", xlim=c(minFold, maxFold)))
with(subset(dds_results, padj< alpha), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(dds_results, padj< alpha & abs(log2FoldChange)>2), points(log2FoldChange, -log10(pvalue), pch=20, col="orange"))
```

Şimdi de alpha değerine göre 2 kat fazla artan ya da 2 kattan fazla azalan genleri belirleyip hem bir heatmap yapalım hem de bu bakterileri yazalım:

```{r}
ups <- subset(x = dds_results, subset = log2FoldChange > 2 & padj < alpha)
downs <- subset(x = dds_results, subset = log2FoldChange < -2 & padj < alpha)
m <- rbind(ups,downs)
m$OTU <- rownames(m)
```

Bu genlerin sahip olduğu normalize edilmiş anlatım verilerini, ısı haritası ile görselleştirmek için, normalize edilmiş matris içinden elde edelim. Daha sonra `log2` fonkisyonu ile 2'nin katlarına transforme edelim.

Burada dikkat edilmesi gereken şey ise $log2(0) = -Inf$ olması. Bu yüzden $-Inf$ değerlerini, 0 olarak düzeltmemiz gerek. Bu sayede anlatımı 0 olan genleri de ısı matrisinde gösterebiliriz:

```{r}
sig <- otu_data_subset[m$OTU,]
logsig <- log2(sig)
logsig[logsig == -Inf]<-0
```

Son olarak ısı haritasını elde edelim ve bu bakterileri kaydedelim.

```{r}
library(pheatmap)
colnames(logsig)<-sample_data_subset$Tissue
pheatmap(mat = logsig, cluster_cols = F)

write.table(file = "significant_bacteria.csv", sep = ";", quote = FALSE, x = m, dec = ",")
```

Dentin ve cementum dokularının ayrı olarak gözlemlediğimiz ısı haritasını elde edelim:

```{r}

f <- sample_data_subset[order(sample_data_subset$Tissue),]
colnames(logsig) <- sample_data_subset$Sample
l<-logsig[,f$Sample]
colnames(l)<-f$Tissue
pheatmap(l, cluster_cols = F)

```
